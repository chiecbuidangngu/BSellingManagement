@using BookSellingManagement.Models.Categories
@model IEnumerable<CategoryModel>
@{
    ViewData["title"] = "Quản lý thể loại";

    Paginate pager = new Paginate();
    int pageNo = 0;
    if (ViewBag.Pager != null)
    {
        pager = ViewBag.Pager;
        pageNo = pager.CurrentPage;
    }
}
    <style>
        .search-bar {
            width: 300px;
            display: flex;
            align-items: center;
        }

        .btn-add {
            margin-left: 50px;
        }

        .search-bar input {
            flex: 1;
        }

        .table-container {
            margin-top: 20px;
            margin-left: 50px;
        }

        .table th {
            text-align: center;
        }

       
        .modal.fade {
            z-index: 1050 !important; 
        }

        .modal-backdrop {
            z-index: 1040 !important;
        }

    </style>

    <div class="container">
        <h2 class="text-center mt-4">Quản Lý Thể Loại</h2>

        <!-- Add and Search Section -->
        <div class="d-flex justify-content-between align-items-center mt-4">
            <a class="btn btn-primary btn-add" asp-action="Create" asp-controller="Categories">Thêm Mới</a>

            <div class="search-bar">
                <input type="text" id="searchInput" class="form-control" placeholder="Tìm kiếm theo tên thể loại">
                <button class="btn btn-primary ml-2" onclick="searchCategory()">
                    <i class="fas fa-search"></i> 
                </button>
            </div>
        </div>

        <!-- Book Table -->
        <div class="table-container">
            <table class="table table-bordered table-striped mt-3" id="categoryTable">
                <thead class="thead">
                    <tr>
                        <th>Mã Thể Loại</th>
                        <th>Tên Thể Loại</th>
                        <th>Mô Tả</th>
      
           
                        <th></th>
                    </tr>
                </thead>
                <tbody id="bookTable">
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                <a href="@Url.Action("Details", "Categories", new { CategoryId = item.CategoryId })">
                                    @item.CategoryCode
                                </a>
                            </td>
                            <td>@item.CategoryCode</td>
                            <td>@item.CategoryName</td>
                            <td>@Html.Raw(@item.Description)</td>
                            <td style="text-align: center;">
                                <a asp-action="Edit" asp-controller="Categories" asp-route-CategoryId="@item.CategoryId" title="Sửa">
                                    <i class="fas fa-pencil-alt text-warning"></i>
                                </a>
                            </td>
                            <td style="text-align: center;">
                                <a asp-action="Delete" asp-controller="Categories" asp-route-CategoryId="@item.CategoryId" title="Xóa">
                                    <i class="fas fa-trash-alt text-danger"></i>
                                </a>
                            </td>


                        </tr>
                    }
                </tbody>
            </table>
        </div>

      

    </div>
    <partial name="_Paging" model="@pager" />
    <script>
        // Function to search categories by name
        function searchCategory() {
            const input = document.getElementById('searchInput').value.toLowerCase();
            const tableRows = document.querySelectorAll('#categoryTable tr');
            tableRows.forEach(row => {
                const categoryName = row.cells[1].innerText.toLowerCase();
                row.style.display = categoryName.includes(input) ? '' : 'none';
            });
        }

    </script>

